// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wib.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_wib_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_wib_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3009000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3009002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_wib_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_wib_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_wib_2eproto;
namespace wib {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class GetSensors;
class GetSensorsDefaultTypeInternal;
extern GetSensorsDefaultTypeInternal _GetSensors_default_instance_;
class Initialize;
class InitializeDefaultTypeInternal;
extern InitializeDefaultTypeInternal _Initialize_default_instance_;
class Peek;
class PeekDefaultTypeInternal;
extern PeekDefaultTypeInternal _Peek_default_instance_;
class Poke;
class PokeDefaultTypeInternal;
extern PokeDefaultTypeInternal _Poke_default_instance_;
class Reboot;
class RebootDefaultTypeInternal;
extern RebootDefaultTypeInternal _Reboot_default_instance_;
class RegValue;
class RegValueDefaultTypeInternal;
extern RegValueDefaultTypeInternal _RegValue_default_instance_;
class Sensors;
class SensorsDefaultTypeInternal;
extern SensorsDefaultTypeInternal _Sensors_default_instance_;
class Update;
class UpdateDefaultTypeInternal;
extern UpdateDefaultTypeInternal _Update_default_instance_;
}  // namespace wib
PROTOBUF_NAMESPACE_OPEN
template<> ::wib::Command* Arena::CreateMaybeMessage<::wib::Command>(Arena*);
template<> ::wib::Empty* Arena::CreateMaybeMessage<::wib::Empty>(Arena*);
template<> ::wib::GetSensors* Arena::CreateMaybeMessage<::wib::GetSensors>(Arena*);
template<> ::wib::Initialize* Arena::CreateMaybeMessage<::wib::Initialize>(Arena*);
template<> ::wib::Peek* Arena::CreateMaybeMessage<::wib::Peek>(Arena*);
template<> ::wib::Poke* Arena::CreateMaybeMessage<::wib::Poke>(Arena*);
template<> ::wib::Reboot* Arena::CreateMaybeMessage<::wib::Reboot>(Arena*);
template<> ::wib::RegValue* Arena::CreateMaybeMessage<::wib::RegValue>(Arena*);
template<> ::wib::Sensors* Arena::CreateMaybeMessage<::wib::Sensors>(Arena*);
template<> ::wib::Update* Arena::CreateMaybeMessage<::wib::Update>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace wib {

// ===================================================================

class Command :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }
  inline void Swap(Command* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(nullptr);
  }

  Command* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Command";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdFieldNumber = 1,
  };
  // .google.protobuf.Any cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  const PROTOBUF_NAMESPACE_ID::Any& cmd() const;
  PROTOBUF_NAMESPACE_ID::Any* release_cmd();
  PROTOBUF_NAMESPACE_ID::Any* mutable_cmd();
  void set_allocated_cmd(PROTOBUF_NAMESPACE_ID::Any* cmd);

  // @@protoc_insertion_point(class_scope:wib.Command)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  PROTOBUF_NAMESPACE_ID::Any* cmd_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class Initialize :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Initialize) */ {
 public:
  Initialize();
  virtual ~Initialize();

  Initialize(const Initialize& from);
  Initialize(Initialize&& from) noexcept
    : Initialize() {
    *this = ::std::move(from);
  }

  inline Initialize& operator=(const Initialize& from) {
    CopyFrom(from);
    return *this;
  }
  inline Initialize& operator=(Initialize&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Initialize& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Initialize* internal_default_instance() {
    return reinterpret_cast<const Initialize*>(
               &_Initialize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Initialize& a, Initialize& b) {
    a.Swap(&b);
  }
  inline void Swap(Initialize* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Initialize* New() const final {
    return CreateMaybeMessage<Initialize>(nullptr);
  }

  Initialize* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Initialize>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Initialize& from);
  void MergeFrom(const Initialize& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Initialize* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Initialize";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:wib.Initialize)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class Update :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Update) */ {
 public:
  Update();
  virtual ~Update();

  Update(const Update& from);
  Update(Update&& from) noexcept
    : Update() {
    *this = ::std::move(from);
  }

  inline Update& operator=(const Update& from) {
    CopyFrom(from);
    return *this;
  }
  inline Update& operator=(Update&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Update& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Update* internal_default_instance() {
    return reinterpret_cast<const Update*>(
               &_Update_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Update& a, Update& b) {
    a.Swap(&b);
  }
  inline void Swap(Update* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Update* New() const final {
    return CreateMaybeMessage<Update>(nullptr);
  }

  Update* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Update>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Update& from);
  void MergeFrom(const Update& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Update* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Update";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRootArchiveFieldNumber = 1,
    kBootArchiveFieldNumber = 2,
  };
  // bytes root_archive = 1;
  void clear_root_archive();
  const std::string& root_archive() const;
  void set_root_archive(const std::string& value);
  void set_root_archive(std::string&& value);
  void set_root_archive(const char* value);
  void set_root_archive(const void* value, size_t size);
  std::string* mutable_root_archive();
  std::string* release_root_archive();
  void set_allocated_root_archive(std::string* root_archive);

  // bytes boot_archive = 2;
  void clear_boot_archive();
  const std::string& boot_archive() const;
  void set_boot_archive(const std::string& value);
  void set_boot_archive(std::string&& value);
  void set_boot_archive(const char* value);
  void set_boot_archive(const void* value, size_t size);
  std::string* mutable_boot_archive();
  std::string* release_boot_archive();
  void set_allocated_boot_archive(std::string* boot_archive);

  // @@protoc_insertion_point(class_scope:wib.Update)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr root_archive_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr boot_archive_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class Reboot :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Reboot) */ {
 public:
  Reboot();
  virtual ~Reboot();

  Reboot(const Reboot& from);
  Reboot(Reboot&& from) noexcept
    : Reboot() {
    *this = ::std::move(from);
  }

  inline Reboot& operator=(const Reboot& from) {
    CopyFrom(from);
    return *this;
  }
  inline Reboot& operator=(Reboot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Reboot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Reboot* internal_default_instance() {
    return reinterpret_cast<const Reboot*>(
               &_Reboot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Reboot& a, Reboot& b) {
    a.Swap(&b);
  }
  inline void Swap(Reboot* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Reboot* New() const final {
    return CreateMaybeMessage<Reboot>(nullptr);
  }

  Reboot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Reboot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Reboot& from);
  void MergeFrom(const Reboot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Reboot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Reboot";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:wib.Reboot)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class Peek :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Peek) */ {
 public:
  Peek();
  virtual ~Peek();

  Peek(const Peek& from);
  Peek(Peek&& from) noexcept
    : Peek() {
    *this = ::std::move(from);
  }

  inline Peek& operator=(const Peek& from) {
    CopyFrom(from);
    return *this;
  }
  inline Peek& operator=(Peek&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Peek& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Peek* internal_default_instance() {
    return reinterpret_cast<const Peek*>(
               &_Peek_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Peek& a, Peek& b) {
    a.Swap(&b);
  }
  inline void Swap(Peek* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Peek* New() const final {
    return CreateMaybeMessage<Peek>(nullptr);
  }

  Peek* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Peek>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Peek& from);
  void MergeFrom(const Peek& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Peek* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Peek";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrFieldNumber = 1,
  };
  // uint64 addr = 1;
  void clear_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 addr() const;
  void set_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // @@protoc_insertion_point(class_scope:wib.Peek)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 addr_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class Poke :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Poke) */ {
 public:
  Poke();
  virtual ~Poke();

  Poke(const Poke& from);
  Poke(Poke&& from) noexcept
    : Poke() {
    *this = ::std::move(from);
  }

  inline Poke& operator=(const Poke& from) {
    CopyFrom(from);
    return *this;
  }
  inline Poke& operator=(Poke&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Poke& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Poke* internal_default_instance() {
    return reinterpret_cast<const Poke*>(
               &_Poke_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Poke& a, Poke& b) {
    a.Swap(&b);
  }
  inline void Swap(Poke* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Poke* New() const final {
    return CreateMaybeMessage<Poke>(nullptr);
  }

  Poke* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Poke>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Poke& from);
  void MergeFrom(const Poke& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Poke* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Poke";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // uint64 addr = 1;
  void clear_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 addr() const;
  void set_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint32 value = 2;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:wib.Poke)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class GetSensors :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.GetSensors) */ {
 public:
  GetSensors();
  virtual ~GetSensors();

  GetSensors(const GetSensors& from);
  GetSensors(GetSensors&& from) noexcept
    : GetSensors() {
    *this = ::std::move(from);
  }

  inline GetSensors& operator=(const GetSensors& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSensors& operator=(GetSensors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSensors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSensors* internal_default_instance() {
    return reinterpret_cast<const GetSensors*>(
               &_GetSensors_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetSensors& a, GetSensors& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSensors* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSensors* New() const final {
    return CreateMaybeMessage<GetSensors>(nullptr);
  }

  GetSensors* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSensors>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSensors& from);
  void MergeFrom(const GetSensors& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSensors* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.GetSensors";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:wib.GetSensors)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class Empty :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }
  inline void Swap(Empty* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const final {
    return CreateMaybeMessage<Empty>(nullptr);
  }

  Empty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Empty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Empty";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:wib.Empty)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class RegValue :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.RegValue) */ {
 public:
  RegValue();
  virtual ~RegValue();

  RegValue(const RegValue& from);
  RegValue(RegValue&& from) noexcept
    : RegValue() {
    *this = ::std::move(from);
  }

  inline RegValue& operator=(const RegValue& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegValue& operator=(RegValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RegValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegValue* internal_default_instance() {
    return reinterpret_cast<const RegValue*>(
               &_RegValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RegValue& a, RegValue& b) {
    a.Swap(&b);
  }
  inline void Swap(RegValue* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RegValue* New() const final {
    return CreateMaybeMessage<RegValue>(nullptr);
  }

  RegValue* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RegValue>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RegValue& from);
  void MergeFrom(const RegValue& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegValue* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.RegValue";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAddrFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // uint64 addr = 1;
  void clear_addr();
  ::PROTOBUF_NAMESPACE_ID::uint64 addr() const;
  void set_addr(::PROTOBUF_NAMESPACE_ID::uint64 value);

  // uint32 value = 2;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:wib.RegValue)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 addr_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// -------------------------------------------------------------------

class Sensors :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:wib.Sensors) */ {
 public:
  Sensors();
  virtual ~Sensors();

  Sensors(const Sensors& from);
  Sensors(Sensors&& from) noexcept
    : Sensors() {
    *this = ::std::move(from);
  }

  inline Sensors& operator=(const Sensors& from) {
    CopyFrom(from);
    return *this;
  }
  inline Sensors& operator=(Sensors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Sensors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Sensors* internal_default_instance() {
    return reinterpret_cast<const Sensors*>(
               &_Sensors_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Sensors& a, Sensors& b) {
    a.Swap(&b);
  }
  inline void Swap(Sensors* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Sensors* New() const final {
    return CreateMaybeMessage<Sensors>(nullptr);
  }

  Sensors* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Sensors>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Sensors& from);
  void MergeFrom(const Sensors& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Sensors* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "wib.Sensors";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_wib_2eproto);
    return ::descriptor_table_wib_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLtc29904EVoltagesFieldNumber = 1,
    kLtc29904CVoltagesFieldNumber = 2,
    kLtc299148VoltagesFieldNumber = 3,
    kAd741449TempsFieldNumber = 4,
    kAd74144DTempsFieldNumber = 5,
    kAd74144ATempsFieldNumber = 6,
    kLtc249915TempsFieldNumber = 7,
  };
  // repeated double ltc2990_4E_voltages = 1;
  int ltc2990_4e_voltages_size() const;
  void clear_ltc2990_4e_voltages();
  double ltc2990_4e_voltages(int index) const;
  void set_ltc2990_4e_voltages(int index, double value);
  void add_ltc2990_4e_voltages(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      ltc2990_4e_voltages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_ltc2990_4e_voltages();

  // repeated double ltc2990_4C_voltages = 2;
  int ltc2990_4c_voltages_size() const;
  void clear_ltc2990_4c_voltages();
  double ltc2990_4c_voltages(int index) const;
  void set_ltc2990_4c_voltages(int index, double value);
  void add_ltc2990_4c_voltages(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      ltc2990_4c_voltages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_ltc2990_4c_voltages();

  // repeated double ltc2991_48_voltages = 3;
  int ltc2991_48_voltages_size() const;
  void clear_ltc2991_48_voltages();
  double ltc2991_48_voltages(int index) const;
  void set_ltc2991_48_voltages(int index, double value);
  void add_ltc2991_48_voltages(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      ltc2991_48_voltages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_ltc2991_48_voltages();

  // repeated double ad7414_49_temps = 4;
  int ad7414_49_temps_size() const;
  void clear_ad7414_49_temps();
  double ad7414_49_temps(int index) const;
  void set_ad7414_49_temps(int index, double value);
  void add_ad7414_49_temps(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      ad7414_49_temps() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_ad7414_49_temps();

  // repeated double ad7414_4D_temps = 5;
  int ad7414_4d_temps_size() const;
  void clear_ad7414_4d_temps();
  double ad7414_4d_temps(int index) const;
  void set_ad7414_4d_temps(int index, double value);
  void add_ad7414_4d_temps(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      ad7414_4d_temps() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_ad7414_4d_temps();

  // repeated double ad7414_4A_temps = 6;
  int ad7414_4a_temps_size() const;
  void clear_ad7414_4a_temps();
  double ad7414_4a_temps(int index) const;
  void set_ad7414_4a_temps(int index, double value);
  void add_ad7414_4a_temps(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      ad7414_4a_temps() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_ad7414_4a_temps();

  // repeated double ltc2499_15_temps = 7;
  int ltc2499_15_temps_size() const;
  void clear_ltc2499_15_temps();
  double ltc2499_15_temps(int index) const;
  void set_ltc2499_15_temps(int index, double value);
  void add_ltc2499_15_temps(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      ltc2499_15_temps() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_ltc2499_15_temps();

  // @@protoc_insertion_point(class_scope:wib.Sensors)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > ltc2990_4e_voltages_;
  mutable std::atomic<int> _ltc2990_4e_voltages_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > ltc2990_4c_voltages_;
  mutable std::atomic<int> _ltc2990_4c_voltages_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > ltc2991_48_voltages_;
  mutable std::atomic<int> _ltc2991_48_voltages_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > ad7414_49_temps_;
  mutable std::atomic<int> _ad7414_49_temps_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > ad7414_4d_temps_;
  mutable std::atomic<int> _ad7414_4d_temps_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > ad7414_4a_temps_;
  mutable std::atomic<int> _ad7414_4a_temps_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > ltc2499_15_temps_;
  mutable std::atomic<int> _ltc2499_15_temps_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_wib_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Command

// .google.protobuf.Any cmd = 1;
inline bool Command::has_cmd() const {
  return this != internal_default_instance() && cmd_ != nullptr;
}
inline const PROTOBUF_NAMESPACE_ID::Any& Command::cmd() const {
  const PROTOBUF_NAMESPACE_ID::Any* p = cmd_;
  // @@protoc_insertion_point(field_get:wib.Command.cmd)
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Any*>(
      &PROTOBUF_NAMESPACE_ID::_Any_default_instance_);
}
inline PROTOBUF_NAMESPACE_ID::Any* Command::release_cmd() {
  // @@protoc_insertion_point(field_release:wib.Command.cmd)
  
  PROTOBUF_NAMESPACE_ID::Any* temp = cmd_;
  cmd_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Any* Command::mutable_cmd() {
  
  if (cmd_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Any>(GetArenaNoVirtual());
    cmd_ = p;
  }
  // @@protoc_insertion_point(field_mutable:wib.Command.cmd)
  return cmd_;
}
inline void Command::set_allocated_cmd(PROTOBUF_NAMESPACE_ID::Any* cmd) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(cmd_);
  }
  if (cmd) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cmd = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cmd, submessage_arena);
    }
    
  } else {
    
  }
  cmd_ = cmd;
  // @@protoc_insertion_point(field_set_allocated:wib.Command.cmd)
}

// -------------------------------------------------------------------

// Initialize

// -------------------------------------------------------------------

// Update

// bytes root_archive = 1;
inline void Update::clear_root_archive() {
  root_archive_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Update::root_archive() const {
  // @@protoc_insertion_point(field_get:wib.Update.root_archive)
  return root_archive_.GetNoArena();
}
inline void Update::set_root_archive(const std::string& value) {
  
  root_archive_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:wib.Update.root_archive)
}
inline void Update::set_root_archive(std::string&& value) {
  
  root_archive_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:wib.Update.root_archive)
}
inline void Update::set_root_archive(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  root_archive_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:wib.Update.root_archive)
}
inline void Update::set_root_archive(const void* value, size_t size) {
  
  root_archive_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:wib.Update.root_archive)
}
inline std::string* Update::mutable_root_archive() {
  
  // @@protoc_insertion_point(field_mutable:wib.Update.root_archive)
  return root_archive_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Update::release_root_archive() {
  // @@protoc_insertion_point(field_release:wib.Update.root_archive)
  
  return root_archive_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Update::set_allocated_root_archive(std::string* root_archive) {
  if (root_archive != nullptr) {
    
  } else {
    
  }
  root_archive_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), root_archive);
  // @@protoc_insertion_point(field_set_allocated:wib.Update.root_archive)
}

// bytes boot_archive = 2;
inline void Update::clear_boot_archive() {
  boot_archive_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Update::boot_archive() const {
  // @@protoc_insertion_point(field_get:wib.Update.boot_archive)
  return boot_archive_.GetNoArena();
}
inline void Update::set_boot_archive(const std::string& value) {
  
  boot_archive_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:wib.Update.boot_archive)
}
inline void Update::set_boot_archive(std::string&& value) {
  
  boot_archive_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:wib.Update.boot_archive)
}
inline void Update::set_boot_archive(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  boot_archive_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:wib.Update.boot_archive)
}
inline void Update::set_boot_archive(const void* value, size_t size) {
  
  boot_archive_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:wib.Update.boot_archive)
}
inline std::string* Update::mutable_boot_archive() {
  
  // @@protoc_insertion_point(field_mutable:wib.Update.boot_archive)
  return boot_archive_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Update::release_boot_archive() {
  // @@protoc_insertion_point(field_release:wib.Update.boot_archive)
  
  return boot_archive_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Update::set_allocated_boot_archive(std::string* boot_archive) {
  if (boot_archive != nullptr) {
    
  } else {
    
  }
  boot_archive_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), boot_archive);
  // @@protoc_insertion_point(field_set_allocated:wib.Update.boot_archive)
}

// -------------------------------------------------------------------

// Reboot

// -------------------------------------------------------------------

// Peek

// uint64 addr = 1;
inline void Peek::clear_addr() {
  addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Peek::addr() const {
  // @@protoc_insertion_point(field_get:wib.Peek.addr)
  return addr_;
}
inline void Peek::set_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  addr_ = value;
  // @@protoc_insertion_point(field_set:wib.Peek.addr)
}

// -------------------------------------------------------------------

// Poke

// uint64 addr = 1;
inline void Poke::clear_addr() {
  addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Poke::addr() const {
  // @@protoc_insertion_point(field_get:wib.Poke.addr)
  return addr_;
}
inline void Poke::set_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  addr_ = value;
  // @@protoc_insertion_point(field_set:wib.Poke.addr)
}

// uint32 value = 2;
inline void Poke::clear_value() {
  value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Poke::value() const {
  // @@protoc_insertion_point(field_get:wib.Poke.value)
  return value_;
}
inline void Poke::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:wib.Poke.value)
}

// -------------------------------------------------------------------

// GetSensors

// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// RegValue

// uint64 addr = 1;
inline void RegValue::clear_addr() {
  addr_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RegValue::addr() const {
  // @@protoc_insertion_point(field_get:wib.RegValue.addr)
  return addr_;
}
inline void RegValue::set_addr(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  addr_ = value;
  // @@protoc_insertion_point(field_set:wib.RegValue.addr)
}

// uint32 value = 2;
inline void RegValue::clear_value() {
  value_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RegValue::value() const {
  // @@protoc_insertion_point(field_get:wib.RegValue.value)
  return value_;
}
inline void RegValue::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:wib.RegValue.value)
}

// -------------------------------------------------------------------

// Sensors

// repeated double ltc2990_4E_voltages = 1;
inline int Sensors::ltc2990_4e_voltages_size() const {
  return ltc2990_4e_voltages_.size();
}
inline void Sensors::clear_ltc2990_4e_voltages() {
  ltc2990_4e_voltages_.Clear();
}
inline double Sensors::ltc2990_4e_voltages(int index) const {
  // @@protoc_insertion_point(field_get:wib.Sensors.ltc2990_4E_voltages)
  return ltc2990_4e_voltages_.Get(index);
}
inline void Sensors::set_ltc2990_4e_voltages(int index, double value) {
  ltc2990_4e_voltages_.Set(index, value);
  // @@protoc_insertion_point(field_set:wib.Sensors.ltc2990_4E_voltages)
}
inline void Sensors::add_ltc2990_4e_voltages(double value) {
  ltc2990_4e_voltages_.Add(value);
  // @@protoc_insertion_point(field_add:wib.Sensors.ltc2990_4E_voltages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Sensors::ltc2990_4e_voltages() const {
  // @@protoc_insertion_point(field_list:wib.Sensors.ltc2990_4E_voltages)
  return ltc2990_4e_voltages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Sensors::mutable_ltc2990_4e_voltages() {
  // @@protoc_insertion_point(field_mutable_list:wib.Sensors.ltc2990_4E_voltages)
  return &ltc2990_4e_voltages_;
}

// repeated double ltc2990_4C_voltages = 2;
inline int Sensors::ltc2990_4c_voltages_size() const {
  return ltc2990_4c_voltages_.size();
}
inline void Sensors::clear_ltc2990_4c_voltages() {
  ltc2990_4c_voltages_.Clear();
}
inline double Sensors::ltc2990_4c_voltages(int index) const {
  // @@protoc_insertion_point(field_get:wib.Sensors.ltc2990_4C_voltages)
  return ltc2990_4c_voltages_.Get(index);
}
inline void Sensors::set_ltc2990_4c_voltages(int index, double value) {
  ltc2990_4c_voltages_.Set(index, value);
  // @@protoc_insertion_point(field_set:wib.Sensors.ltc2990_4C_voltages)
}
inline void Sensors::add_ltc2990_4c_voltages(double value) {
  ltc2990_4c_voltages_.Add(value);
  // @@protoc_insertion_point(field_add:wib.Sensors.ltc2990_4C_voltages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Sensors::ltc2990_4c_voltages() const {
  // @@protoc_insertion_point(field_list:wib.Sensors.ltc2990_4C_voltages)
  return ltc2990_4c_voltages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Sensors::mutable_ltc2990_4c_voltages() {
  // @@protoc_insertion_point(field_mutable_list:wib.Sensors.ltc2990_4C_voltages)
  return &ltc2990_4c_voltages_;
}

// repeated double ltc2991_48_voltages = 3;
inline int Sensors::ltc2991_48_voltages_size() const {
  return ltc2991_48_voltages_.size();
}
inline void Sensors::clear_ltc2991_48_voltages() {
  ltc2991_48_voltages_.Clear();
}
inline double Sensors::ltc2991_48_voltages(int index) const {
  // @@protoc_insertion_point(field_get:wib.Sensors.ltc2991_48_voltages)
  return ltc2991_48_voltages_.Get(index);
}
inline void Sensors::set_ltc2991_48_voltages(int index, double value) {
  ltc2991_48_voltages_.Set(index, value);
  // @@protoc_insertion_point(field_set:wib.Sensors.ltc2991_48_voltages)
}
inline void Sensors::add_ltc2991_48_voltages(double value) {
  ltc2991_48_voltages_.Add(value);
  // @@protoc_insertion_point(field_add:wib.Sensors.ltc2991_48_voltages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Sensors::ltc2991_48_voltages() const {
  // @@protoc_insertion_point(field_list:wib.Sensors.ltc2991_48_voltages)
  return ltc2991_48_voltages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Sensors::mutable_ltc2991_48_voltages() {
  // @@protoc_insertion_point(field_mutable_list:wib.Sensors.ltc2991_48_voltages)
  return &ltc2991_48_voltages_;
}

// repeated double ad7414_49_temps = 4;
inline int Sensors::ad7414_49_temps_size() const {
  return ad7414_49_temps_.size();
}
inline void Sensors::clear_ad7414_49_temps() {
  ad7414_49_temps_.Clear();
}
inline double Sensors::ad7414_49_temps(int index) const {
  // @@protoc_insertion_point(field_get:wib.Sensors.ad7414_49_temps)
  return ad7414_49_temps_.Get(index);
}
inline void Sensors::set_ad7414_49_temps(int index, double value) {
  ad7414_49_temps_.Set(index, value);
  // @@protoc_insertion_point(field_set:wib.Sensors.ad7414_49_temps)
}
inline void Sensors::add_ad7414_49_temps(double value) {
  ad7414_49_temps_.Add(value);
  // @@protoc_insertion_point(field_add:wib.Sensors.ad7414_49_temps)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Sensors::ad7414_49_temps() const {
  // @@protoc_insertion_point(field_list:wib.Sensors.ad7414_49_temps)
  return ad7414_49_temps_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Sensors::mutable_ad7414_49_temps() {
  // @@protoc_insertion_point(field_mutable_list:wib.Sensors.ad7414_49_temps)
  return &ad7414_49_temps_;
}

// repeated double ad7414_4D_temps = 5;
inline int Sensors::ad7414_4d_temps_size() const {
  return ad7414_4d_temps_.size();
}
inline void Sensors::clear_ad7414_4d_temps() {
  ad7414_4d_temps_.Clear();
}
inline double Sensors::ad7414_4d_temps(int index) const {
  // @@protoc_insertion_point(field_get:wib.Sensors.ad7414_4D_temps)
  return ad7414_4d_temps_.Get(index);
}
inline void Sensors::set_ad7414_4d_temps(int index, double value) {
  ad7414_4d_temps_.Set(index, value);
  // @@protoc_insertion_point(field_set:wib.Sensors.ad7414_4D_temps)
}
inline void Sensors::add_ad7414_4d_temps(double value) {
  ad7414_4d_temps_.Add(value);
  // @@protoc_insertion_point(field_add:wib.Sensors.ad7414_4D_temps)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Sensors::ad7414_4d_temps() const {
  // @@protoc_insertion_point(field_list:wib.Sensors.ad7414_4D_temps)
  return ad7414_4d_temps_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Sensors::mutable_ad7414_4d_temps() {
  // @@protoc_insertion_point(field_mutable_list:wib.Sensors.ad7414_4D_temps)
  return &ad7414_4d_temps_;
}

// repeated double ad7414_4A_temps = 6;
inline int Sensors::ad7414_4a_temps_size() const {
  return ad7414_4a_temps_.size();
}
inline void Sensors::clear_ad7414_4a_temps() {
  ad7414_4a_temps_.Clear();
}
inline double Sensors::ad7414_4a_temps(int index) const {
  // @@protoc_insertion_point(field_get:wib.Sensors.ad7414_4A_temps)
  return ad7414_4a_temps_.Get(index);
}
inline void Sensors::set_ad7414_4a_temps(int index, double value) {
  ad7414_4a_temps_.Set(index, value);
  // @@protoc_insertion_point(field_set:wib.Sensors.ad7414_4A_temps)
}
inline void Sensors::add_ad7414_4a_temps(double value) {
  ad7414_4a_temps_.Add(value);
  // @@protoc_insertion_point(field_add:wib.Sensors.ad7414_4A_temps)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Sensors::ad7414_4a_temps() const {
  // @@protoc_insertion_point(field_list:wib.Sensors.ad7414_4A_temps)
  return ad7414_4a_temps_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Sensors::mutable_ad7414_4a_temps() {
  // @@protoc_insertion_point(field_mutable_list:wib.Sensors.ad7414_4A_temps)
  return &ad7414_4a_temps_;
}

// repeated double ltc2499_15_temps = 7;
inline int Sensors::ltc2499_15_temps_size() const {
  return ltc2499_15_temps_.size();
}
inline void Sensors::clear_ltc2499_15_temps() {
  ltc2499_15_temps_.Clear();
}
inline double Sensors::ltc2499_15_temps(int index) const {
  // @@protoc_insertion_point(field_get:wib.Sensors.ltc2499_15_temps)
  return ltc2499_15_temps_.Get(index);
}
inline void Sensors::set_ltc2499_15_temps(int index, double value) {
  ltc2499_15_temps_.Set(index, value);
  // @@protoc_insertion_point(field_set:wib.Sensors.ltc2499_15_temps)
}
inline void Sensors::add_ltc2499_15_temps(double value) {
  ltc2499_15_temps_.Add(value);
  // @@protoc_insertion_point(field_add:wib.Sensors.ltc2499_15_temps)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
Sensors::ltc2499_15_temps() const {
  // @@protoc_insertion_point(field_list:wib.Sensors.ltc2499_15_temps)
  return ltc2499_15_temps_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
Sensors::mutable_ltc2499_15_temps() {
  // @@protoc_insertion_point(field_mutable_list:wib.Sensors.ltc2499_15_temps)
  return &ltc2499_15_temps_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace wib

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_wib_2eproto
